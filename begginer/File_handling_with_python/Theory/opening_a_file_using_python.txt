8888 w 8                     w        w                   
8www w 8 .d88b    88b. .d8b. w 8d8b. w8ww .d88b 8d8b d88b 
8    8 8 8.dP'    8  8 8' .8 8 8P Y8  8   8.dP' 8P   `Yb. 
8    8 8 `Y88P    88P' `Y8P' 8 8   8  Y8P `Y88P 8    Y88P 
                  8  

A File object holds information about a disk file or a disk directory. A File object is NOT the actual file. It does not contain the data that the file holds. ... It works as an interface between a program and the functions of the operating system that do the actual file manipulation.

It just points towards the file

This is also known as file-handle



8888 w 8          888b.       w   8          
8www w 8 .d88b    8  .8 .d88 w8ww 8d8b. d88b 
8    8 8 8.dP'    8wwP' 8  8  8   8P Y8 `Yb. 
8    8 8 `Y88P    8     `Y88  Y8P 8   8 Y88P 
                                             

There are mainly two kinds of fiel paths available in python:
	1. Absolute file paths:
		this is original or the full path of the file which we are trying to fetch

		for example:
		for windows :=
			always use backslashes:
				'C:\Users\Default\Desktop'
		for macintosh and linux type file distros:
			use forward slashes
				'/root/Desktop/sample.txt'

	2.Relative file paths:
		these are relative file paths for example just refering file to be used related to the current working file

		for example:
		always use backslashes:
				'my_code\file.txt'
				'./file.txt'
				'./' this denotes the current working directory
		for macintosh and linux type file distros:
			use forward slashes
				'my_code/sample.txt'		
				'./file.txt'
				'./' this denotes the current working directory

These file paths are extreamely useful while handling files with python.............